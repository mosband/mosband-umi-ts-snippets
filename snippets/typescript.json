{
  "umi model": {
    "prefix": "umi-model",
    "body": [
      "import { Effect, Reducer, Subscription } from 'umi';",
      "",
      "export interface ${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}ModelState {",
      "\t${1:[propName: string]}: ${2:any};",
      "}",
      "",
      "export interface I${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}Model {",
      "\tnamespace: '${TM_FILENAME_BASE}';",
      "\tstate: ${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}ModelState;",
      "\teffects: {",
      "\t\tfetch: Effect;",
      "\t};",
      "\treducers: {",
      "\t\tset: Reducer<${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}ModelState>;",
      "\t};",
      "\tsubscriptions: {",
      "\t\tinit: Subscription;",
      "\t};",
      "}",
      "",
      "const ${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}Model: I${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}Model = {",
      "\tnamespace: '${TM_FILENAME_BASE}',",
      "",
      "\tstate: {",
      "\t\t${3:n}: ${4:0},",
      "\t},",
      "",
      "\treducers: {",
      "\t\tset(state, action) {",
      "\t\t\treturn {",
      "\t\t\t\t...state,",
      "\t\t\t\t...action.payload,",
      "\t\t\t};",
      "\t\t},",
      "\t},",
      "",
      "\teffects: {",
      "\t\t*fetch(action, { put, call, select }) {",
      "\t\t\tyield put({",
      "\t\t\t\ttype: 'set',",
      "\t\t\t\tpayload: {},",
      "\t\t\t});",
      "\t\t},",
      "\t},",
      "",
      "\tsubscriptions: {",
      "\t\tinit({ history, dispatch }) {",
      "\t\t\treturn history.listen(({ pathname }) => {",
      "\t\t\t\tif (pathname === '/') {",
      "\t\t\t\t\tdispatch({",
      "\t\t\t\t\t\ttype: 'fetch',",
      "\t\t\t\t\t});",
      "\t\t\t\t}",
      "\t\t\t});",
      "\t\t},",
      "\t},",
      "};",
      "",
      "export default ${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}Model;",
      ""
    ],
    "description": "umi model"
  }
}
